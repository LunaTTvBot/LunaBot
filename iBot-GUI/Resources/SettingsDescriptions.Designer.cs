//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace iBot_GUI.Resources {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class SettingsDescriptions {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal SettingsDescriptions() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("iBot_GUI.Resources.SettingsDescriptions", typeof(SettingsDescriptions).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Given Nickname of the Bot.
        /// </summary>
        internal static string settings_description_BotNickname {
            get {
                return ResourceManager.GetString("settings_description_BotNickname", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Twitch-OAuth key for the Bot-Account.
        /// </summary>
        internal static string settings_description_BotTwitchApiKey {
            get {
                return ResourceManager.GetString("settings_description_BotTwitchApiKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to List of channels the bot should join upon start.
        /// </summary>
        internal static string settings_description_ChannelList {
            get {
                return ResourceManager.GetString("settings_description_ChannelList", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Owners (Your) Nickname.
        /// </summary>
        internal static string settings_description_OwnerNickname {
            get {
                return ResourceManager.GetString("settings_description_OwnerNickname", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Owners (Your)Twitch-OAuth key.
        /// </summary>
        internal static string settings_description_OwnerTwitchApiKey {
            get {
                return ResourceManager.GetString("settings_description_OwnerTwitchApiKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Length of any given interval in which a users emote-spam-messages are counted.
        /// </summary>
        internal static string settings_description_UserEmoteSpamInterval {
            get {
                return ResourceManager.GetString("settings_description_UserEmoteSpamInterval", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to How much of a message needs to be emotes to be considered spam.
        /// </summary>
        internal static string settings_description_UserEmoteSpamMessagePercentage {
            get {
                return ResourceManager.GetString("settings_description_UserEmoteSpamMessagePercentage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Maximum amount of emotes in a message before it being considered spam.
        /// </summary>
        internal static string settings_description_UserEmoteSpamMessageThreshold {
            get {
                return ResourceManager.GetString("settings_description_UserEmoteSpamMessageThreshold", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to How many emote-spam messages a user can send before being considered as spammer.
        /// </summary>
        internal static string settings_description_UserEmoteSpamThreshold {
            get {
                return ResourceManager.GetString("settings_description_UserEmoteSpamThreshold", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Length of any given interval in which a users spam-messages are counted.
        /// </summary>
        internal static string settings_description_UserMessageSpamInterval {
            get {
                return ResourceManager.GetString("settings_description_UserMessageSpamInterval", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to How many messages a user can send before being considered a spammer.
        /// </summary>
        internal static string settings_description_UserMessageSpamThreshold {
            get {
                return ResourceManager.GetString("settings_description_UserMessageSpamThreshold", resourceCulture);
            }
        }
    }
}
