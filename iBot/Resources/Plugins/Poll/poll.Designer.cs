//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

namespace IBot.Resources.Plugins.Poll {
    /// <summary>
    ///   Eine stark typisierte Ressourcenklasse zum Suchen von lokalisierten Zeichenfolgen usw.
    /// </summary>
    // Diese Klasse wurde von der StronglyTypedResourceBuilder automatisch generiert
    // -Klasse über ein Tool wie ResGen oder Visual Studio automatisch generiert.
    // Um einen Member hinzuzufügen oder zu entfernen, bearbeiten Sie die .ResX-Datei und führen dann ResGen
    // mit der /str-Option erneut aus, oder Sie erstellen Ihr VS-Projekt neu.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class poll {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal poll() {
        }
        
        /// <summary>
        ///   Gibt die zwischengespeicherte ResourceManager-Instanz zurück, die von dieser Klasse verwendet wird.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("IBot.Resources.Plugins.Poll.poll", typeof(poll).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Überschreibt die CurrentUICulture-Eigenschaft des aktuellen Threads für alle
        ///   Ressourcenzuordnungen, die diese stark typisierte Ressourcenklasse verwenden.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This command is not available in private chat. ({0}) ähnelt.
        /// </summary>
        internal static string command_not_available_private {
            get {
                return ResourceManager.GetString("command_not_available_private", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die No polls created. Get help with !poll. ähnelt.
        /// </summary>
        internal static string no_polls {
            get {
                return ResourceManager.GetString("no_polls", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Poll {0} aborted successfully. Votes are no longer accepted for Poll {0}. ähnelt.
        /// </summary>
        internal static string poll_aborted {
            get {
                return ResourceManager.GetString("poll_aborted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die You already voted for Poll {0}. ähnelt.
        /// </summary>
        internal static string poll_already_voted {
            get {
                return ResourceManager.GetString("poll_already_voted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Upps, I&apos;m sorry. Something went wrong. Please try again or type !poll to get help. ähnelt.
        /// </summary>
        internal static string poll_base_error {
            get {
                return ResourceManager.GetString("poll_base_error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Poll created with id: {0}. ähnelt.
        /// </summary>
        internal static string poll_created {
            get {
                return ResourceManager.GetString("poll_created", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Poll {0} finished. {1} won with {2} ({3}) from {4} votes. Enter !poll result:{5} for further information. ähnelt.
        /// </summary>
        internal static string poll_finished {
            get {
                return ResourceManager.GetString("poll_finished", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Poll Plugin Help: Type !poll create(TITLE) opt1|opt2|opt3 or !poll create opt1|opt2|opt3 to create a new poll. Start a poll with !poll start:POLL-ID. For further information about the plugin visit: https://github.com/SuNflOw1991/iBot-Wiki-EN/wiki/Poll ähnelt.
        /// </summary>
        internal static string poll_help {
            get {
                return ResourceManager.GetString("poll_help", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Poll {0} is already resetted. ähnelt.
        /// </summary>
        internal static string poll_is_resetted {
            get {
                return ResourceManager.GetString("poll_is_resetted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Poll makes no sense (only one option). Ignored. ähnelt.
        /// </summary>
        internal static string poll_makes_no_sense {
            get {
                return ResourceManager.GetString("poll_makes_no_sense", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Poll {0} doesnt have option {1}. ähnelt.
        /// </summary>
        internal static string poll_no_such_option {
            get {
                return ResourceManager.GetString("poll_no_such_option", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Nobody voted for poll {0}. ähnelt.
        /// </summary>
        internal static string poll_no_votes {
            get {
                return ResourceManager.GetString("poll_no_votes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Poll {0} could not be found. Get a list with available polls with: !poll list. ähnelt.
        /// </summary>
        internal static string poll_not_found {
            get {
                return ResourceManager.GetString("poll_not_found", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Poll {0} not finished yet. ähnelt.
        /// </summary>
        internal static string poll_not_ran {
            get {
                return ResourceManager.GetString("poll_not_ran", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Poll {0} not started yet. Nothing to abort. ähnelt.
        /// </summary>
        internal static string poll_not_running {
            get {
                return ResourceManager.GetString("poll_not_running", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Poll {0} not started yet. Nothing to vote. ähnelt.
        /// </summary>
        internal static string poll_not_running_vote {
            get {
                return ResourceManager.GetString("poll_not_running_vote", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die LOADED! ähnelt.
        /// </summary>
        internal static string poll_plugin_loaded {
            get {
                return ResourceManager.GetString("poll_plugin_loaded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Poll Plugin ähnelt.
        /// </summary>
        internal static string poll_plugin_name {
            get {
                return ResourceManager.GetString("poll_plugin_name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Poll {0} has been removed successfully. ähnelt.
        /// </summary>
        internal static string poll_removed {
            get {
                return ResourceManager.GetString("poll_removed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Poll {0} resettet successfully. Start with: !poll start:{0}. ähnelt.
        /// </summary>
        internal static string poll_resetted {
            get {
                return ResourceManager.GetString("poll_resetted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} people voted for Poll {1}. The results are: {2} ähnelt.
        /// </summary>
        internal static string poll_result {
            get {
                return ResourceManager.GetString("poll_result", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Poll {0} is still running. Abort with: !poll abort:{0}. ähnelt.
        /// </summary>
        internal static string poll_running {
            get {
                return ResourceManager.GetString("poll_running", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Poll {0} started for {1} minute(s). Vote now with !vote:{2} OPTION-ID. Options are: ähnelt.
        /// </summary>
        internal static string poll_started {
            get {
                return ResourceManager.GetString("poll_started", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die You voted for Poll {0}. ähnelt.
        /// </summary>
        internal static string poll_voted {
            get {
                return ResourceManager.GetString("poll_voted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Your command could not be executed successfully. Please try again or type !poll to get help. ähnelt.
        /// </summary>
        internal static string poll_wrong_command {
            get {
                return ResourceManager.GetString("poll_wrong_command", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Poll {0} is not in created state. Use !poll result:{0} to print the results or restart the poll with: !poll restart:{0}. ähnelt.
        /// </summary>
        internal static string poll_wrong_state_restart {
            get {
                return ResourceManager.GetString("poll_wrong_state_restart", resourceCulture);
            }
        }
    }
}
